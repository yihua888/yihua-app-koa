{
  "type": "adjacencyTable",
  "name": "邻接表",
  "children": [
    {
      "name": "findOrder",
      "label": "课程优先",
      "codeUrl": [
        {
          "name": "findOrder.js",
          "url": "/algorithm/adjacencyTable/findOrder.js"
        },
        {
          "name": "index.js",
          "url": "/algorithm/adjacencyTable/index.js"
        }
      ],
      "info": "现在你总共有 n 门课需要选，记为 0 到 n-1。在选修某些课程之前需要一些先修课程。 例如，想要学习课程 0 ，你需要先完成课程 1 ，我们用一个匹配来表示他们: [0,1]。给定课程总量以及它们的先决条件，返回你为了学完所有课程所安排的学习顺序。可能会有多个正确的顺序，你只要返回一种就可以了。如果不可能完成所有课程，返回一个空数组。"
    },
    {
      "name": "canFinish",
      "label": "完成课程",
      "codeUrl": [
        {
          "name": "canFinish.js",
          "url": "/algorithm/adjacencyTable/canFinish.js"
        },
        {
          "name": "index.js",
          "url": "/algorithm/adjacencyTable/index.js"
        }
      ],
      "info": "你这个学期必须选修 numCourse 门课程，记为 0 到 numCourse-1 。在选修某些课程之前需要一些先修课程。 例如，想要学习课程 0 ，你需要先完成课程 1 ，我们用一个匹配来表示他们：[0,1]。给定课程总量以及它们的先决条件，请你判断是否可能完成所有课程的学习？"
    }
  ]
}

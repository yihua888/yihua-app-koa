{
  "type": "dp",
  "name": "动态规划",
  "children": [
    {
      "name": "rob",
      "label": "输入一个数组，表示小偷在当前房屋可以拿到的金额。",
      "codeUrl": [
        {
          "name": "rob.js",
          "url": "/algorithm/dp/rob.js"
        }
      ],
      "info": "你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。给定一个代表每个房屋存放金额的非负整数数组，计算你在不触动警报装置的情况下，能够偷窃到的最高金额。"
    },
    {
      "name": "maximalSquare",
      "label": "求面积",
      "codeUrl": [
        {
          "name": "maximalSquare.js",
          "url": "/algorithm/dp/maximalSquare.js"
        }
      ],
      "info": "一个由 0 和 1 组成的二维矩阵内，找到只包含 1 的最大正方形，并返回其面积"
    },
    {
      "name": "coinChange",
      "label": "硬币",
      "codeUrl": [
        {
          "name": "coinChange.js",
          "url": "/algorithm/dp/coinChange.js"
        }
      ],
      "info": "给定不同面额的硬币 coins 和一个总金额 amount。"
    },
    {
      "name": "uniquePaths",
      "label": "求路径",
      "codeUrl": [
        {
          "name": "uniquePaths.js",
          "url": "/algorithm/dp/uniquePaths.js"
        }
      ],
      "info": "一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为“Start” ）。 机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为“Finish”）。问总共有多少条不同的路径"
    },
    {
      "name": "canJump",
      "label": "跳跃游戏",
      "codeUrl": [
        {
          "name": "canJump.js",
          "url": "/algorithm/dp/canJump.js"
        }
      ],
      "info": "给定一个非负整数数组，你最初位于数组的第一个位置。数组中的每个元素代表你在该位置可以跳跃的最大长度。判断你是否能够到达最后一个位置。"
    }
  ]
}

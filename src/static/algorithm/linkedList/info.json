{
  "type": "linkedList",
  "name": "链表",
  "children": [
    {
      "name": "removeNthFromEnd",
      "label": "删除链表的倒数第n个节点",
      "codeUrl": [
        {
          "name": "removeNthFromEnd.js",
          "url": "/algorithm/linkedList/removeNthFromEnd.js"
        },
        {
          "name": "index.js",
          "url": "/algorithm/linkedList/index.js"
        }
      ],
      "info": "删除链表的倒数第n个节点"
    },
    {
      "name": "isPalindrome",
      "label": "回文链表",
      "codeUrl": [
        {
          "name": "isPalindrome.js",
          "url": "/algorithm/linkedList/isPalindrome.js"
        },
        {
          "name": "index.js",
          "url": "/algorithm/linkedList/index.js"
        }
      ],
      "info": "判断一个链表是否为回文链表"
    },
    {
      "name": "hasCycle",
      "label": "环形链表",
      "codeUrl": [
        {
          "name": "hasCycle.js",
          "url": "/algorithm/linkedList/hasCycle.js"
        },
        {
          "name": "index.js",
          "url": "/algorithm/linkedList/index.js"
        }
      ],
      "info": "判断一个链表是否有环"
    },
    {
      "name": "getKthFromEnd",
      "label": "链表中倒数第k个结点",
      "codeUrl": [
        {
          "name": "getKthFromEnd.js",
          "url": "/algorithm/linkedList/getKthFromEnd.js"
        },
        {
          "name": "index.js",
          "url": "/algorithm/linkedList/index.js"
        }
      ],
      "info": "输入一个链表，输出该链表中倒数第k个结点。"
    },
    {
      "name": "mergeTwoLists",
      "label": "合并链表",
      "codeUrl": [
        {
          "name": "mergeTwoLists.js",
          "url": "/algorithm/linkedList/mergeTwoLists.js"
        },
        {
          "name": "index.js",
          "url": "/algorithm/linkedList/index.js"
        }
      ],
      "info": "输入两个单调递增的链表，输出两个链表合成后的链表，当然我们需要合成后的链表满足单调不减规则。"
    },
    {
      "name": "FindFirstCommonNode",
      "label": "找链表第一个公共结点",
      "codeUrl": [
        {
          "name": "FindFirstCommonNode.js",
          "url": "/algorithm/linkedList/FindFirstCommonNode.js"
        },
        {
          "name": "index.js",
          "url": "/algorithm/linkedList/index.js"
        }
      ],
      "info": "输入两个链表，找出它们的第一个公共结点。"
    },
    {
      "name": "detectCycle",
      "label": "找出环形链表入环位置",
      "codeUrl": [
        {
          "name": "detectCycle.js",
          "url": "/algorithm/linkedList/detectCycle.js"
        },
        {
          "name": "index.js",
          "url": "/algorithm/linkedList/index.js"
        }
      ],
      "info": "找出环形链表入环位置"
    }
  ]
}